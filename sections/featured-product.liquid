{%- liquid

  assign product = all_products[section.settings.featured_product]
  assign current_variant = product.selected_or_first_available_variant

  if product == empty
    assign section_onboarding = true
  endif

  assign thumbnail_position = section.settings.thumbnail_position
  assign click_to_enlarge = section.settings.click_to_enlarge
  assign enable_video_looping = section.settings.enable_video_looping

  assign tabs_active = false
  for block in section.blocks
    if block.type == 'tab_content' or block.type == 'tab_question'
      assign tabs_active = true
      break
    endif
  endfor

  assign product_tabs_shown = false

  assign product_buttons_form_id = 'product-form-buttons-' | append: section.id

-%}

<section
id="section-{{ section.id }}"
class="global__section featured-product product-{{ product.id }} product__section product-template"
data-product-id="{{ product.id }}"
data-section-id="{{ section.id }}"
data-url="{{ product.url }}"
data-section-type="product__section"
data-product-type="featured"
data-sale-format="{{ settings.sale_items }}"
data-initial-variant="{{ current_variant.featured_media.id }}"
data-aos="fade">

<div class="row grid__wrapper featured__product-container">

  {% if section_onboarding %}
    {% render 'onboard-single-product', tabs_active: tabs_active %}
  {% else %}

    <div class="featured__product-heading span-12 auto">
      <h2 class="section-heading text-center">
        <a href="{{ product.url }}">
          {{ section.settings.title }}
        </a>
      </h2>
    </div>

    {% render 'product-json'
    product: product %}

    {% capture product_gallery_config %}{
      "thumbPosition": {{ section.settings.thumbnail_position | json }},
      "enableVideoLooping": {{ section.settings.enable_video_looping | json }},
      "mainSlider": {% if product.media.size <= 1 %}false{% else %}true{% endif %},
      "thumbSlider": {% if product.media.size >= 4 %}true{% else %}false{% endif %},
      "productId": {{ product.id | json }},
      "thumbsShown": 4,
      "clickToEnlarge": {{ click_to_enlarge | json }},
      "isQuick": false,
      "adaptiveHeight": {{ section.settings.adaptive_height | json }}
   }{% endcapture %}

   {% capture product_form_config %}
     { "money_format": {{ shop.money_format | json }},
       "enable_history": true,
       "sold_out": {{ "products.product.sold_out" | t | json }},
       "button": {{ 'products.product.add_to_cart' | t | json }},
       "unavailable": {{ 'products.product.unavailable' | t | json }},
       "savings": {{ 'products.general.savings' | t | json }},
       "only_left": {
         "one": {{ 'products.product.only_left.one' | t | json }},
         "other": {{ 'products.product.only_left.other' | t | json }}
       },
       "quickview": {% if template == 'product.quick' %}true{% else %}false{% endif %},
       "featured_product": false,
       "swatches": {{ settings.product_variants | json }}
     }
   {% endcapture %}


    <div class="product__section-images carousel-container js-product-gallery span-6 sm-span-12 auto"
      data-product-gallery
      data-product-single-media-group
      data-gallery-config='{{ product_gallery_config }}'>

      {%- if product.featured_media -%}

        {% render 'product-image-gallery',
        product: product,
        thumbnail_position: thumbnail_position,
        click_to_enlarge: click_to_enlarge,
        enable_video_looping: enable_video_looping,
        product_gallery_config: product_gallery_config %}

      {%- else -%}
        {% capture current %}{% cycle 1, 2, 3, 4, 5, 6 %}{% endcapture %}
        <div class="span-12">
          {{ 'product-' | append: current | placeholder_svg_tag: 'placeholder-svg' }}
        </div>
      {%- endif -%}
    </div>

    <div class="product__section-contentWrapper span-6 sm-span-12 auto">
      <div class="product__section-content">
        <div class="product__section-details">

          {% capture product_tabs %}
            {% if tabs_active %}
            <div class="product__section--tabs product__tabs-container js-tabbed-product-container">
              <ul class="product__tabs">
                {% for block in section.blocks %}
                  {% if block.type == 'product_description' %}
                    <li class="product__tab-trigger" {{ block.shopify_attributes }} data-tab-index="{{ forloop.index }}">
                      <a class="js-tab-trigger" data-content="{{ block.id }}-tab-{{ forloop.index }}" href="#{{ block.id }}-tab-{{ forloop.index }}">
                        {{ 'products.product.details' | t }}
                      </a>
                    </li>
                  {% endif %}
                  {% if block.type == 'tab_content' and block.settings.tab_title != blank %}
                    <li class="product__tab-trigger" {{ block.shopify_attributes }} data-tab-index="{{ forloop.index }}">
                      <a class="js-tab-trigger" data-content="{{ block.id }}-tab-{{ forloop.index }}" href="#{{ block.id }}-tab-{{ forloop.index }}">
                        {{ block.settings.tab_title | escape }}
                      </a>
                    </li>
                  {% endif %}
                  {% if block.type == 'tab_question' and block.settings.tab_title != blank %}
                    <li class="product__tab-trigger" {{ block.shopify_attributes }} data-tab-index="{{ forloop.index }}">
                      <a class="js-tab-trigger" data-content="{{ block.id }}-tab-{{ forloop.index }}" href="#{{ block.id }}-tab-{{ forloop.index }}">
                        {{ block.settings.tab_title | escape }}
                      </a>
                    </li>
                  {% endif %}
                {% endfor %}
              </ul>
              <div class="clear"></div>

              {%- for block in section.blocks -%}
                {% if block.type == 'product_description' %}
                  <div class="tabbed__product-content tabbed__product-{{ block.id }} js-tabbed-content" id="{{ block.id }}-tab-{{ forloop.index }}" {{ block.shopify_attributes }}>
                    {{ product.description }}
                  </div>
                {%- endif -%}
                {%- if block.type == 'tab_content' -%}
                  <div class="tabbed__product-content tabbed__product-{{ block.id }} js-tabbed-content" id="{{ block.id }}-tab-{{ forloop.index }}" {{ block.shopify_attributes }}>
                    {{ block.settings.tab_text }}
                  </div>
                {%- endif -%}
                {%- if block.type == 'tab_question' -%}
                  <div class="tabbed__product-content tabbed__product-{{ block.id }} js-tabbed-content" id="{{ block.id }}-tab-{{ forloop.index }}" {{ block.shopify_attributes }}>
                    {{ block.settings.tab_text }}
                      {% render 'question' %}
                  </div>
                {%- endif -%}
              {%- endfor -%}
            </div>
            {% endif %}
          {% endcapture %}

          <div class="product__section--header product__section--element" {{ block.shopify_attributes }}>
          </div>

          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {% when 'product_price' %}
                <div class="product__section--header product__section--element product__section--{{ block.type }}" {{ block.shopify_attributes }}>
                  {% render 'product-price', variant: current_variant, product: product %}

                  {% if block.settings.show_tax_information %}
                    {%- if cart.taxes_included or shop.shipping_policy.body != blank -%}
                      <div class="product__policies rte" data-product-policies>
                        {%- if cart.taxes_included -%}
                          {{ 'products.product.include_taxes' | t }}
                        {%- endif -%}
                        {%- if shop.shipping_policy.body != blank -%}
                          {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
                        {%- endif -%}
                      </div>
                    {%- endif -%}
                  {% endif %}

                  {%- form 'product', product, id: 'product-form-installment' -%}
                    <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                    <select style="display:none;" name='id'>
                      {% for variant in product.variants %}
                        <option value="{{ variant.id }}" {% if variant == current_variant %}selected="selected"{% endif %}></option>
                      {% endfor %}
                    </select>
                    <div class="spi-banner">
                      {{ form | payment_terms }}
                    </div><!-- /#spi-banner -->
                  {%- endform -%}
                </div>

              {% when 'product_vendor' %}
                <div class="product__section--header product__section--element product__section--{{ block.type }}" {{ block.shopify_attributes }}>
                  <h3 class="product__vendor">{{ product.vendor }}</h3>
                </div>

              {% when 'product_title' %}
                <div class="product__section--header product__section--element product__section--{{ block.type }}" {{ block.shopify_attributes }}>
                  <h1 class="product__section-title product-title">{{ product.title }}</h1>
                </div>
            {%- when 'product_variants' -%}
              {%- assign product_form_id = 'product-form-' | append: section.id -%}
              {% form 'product', product,
                 id: product_form_id,
                 class: "product__form-container product_form relative",
                 data-product-form: product_form_config,
                 data-product-id: product.id %}

                {%- unless product.has_only_default_variant -%}
                 {%- if settings.product_variants == 'swatches' -%}
                   <div class="product__variants-swatches mt4 mb6 no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}">
                     {% for option in product.options_with_values %}
                       {% render "swatch",
                         option: option,
                         current_variant: current_variant,
                         product: product,
                         show_color_swatches: settings.show_color_swatches,
                         color_swatch_shape: settings.color_swatch_shape,
                         color_swatch_style: settings.color_swatch_style %}
                     {% endfor %}
                   </div>
                 {%- else -%}
                   <div class="product__variants-select no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}">
                     {%- for option in product.options_with_values -%}
                       <div class="product-form__input product-form__input--dropdown product__section--element">
                         <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                           {{ option.name }}
                         </label>
                         <div class="select">
                           <select id="Option-{{ section.id }}-{{ forloop.index0 }}"
                             class="js-variant-selector styled-select"
                             name="options[{{ option.name | escape }}]"
                             form="product-form-{{ section.id }}"
                           >
                             {%- for value in option.values -%}
                               <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>
                                 {{ value }}
                               </option>
                             {%- endfor -%}
                           </select>
                         </div>
                       </div>
                     {%- endfor -%}
                   </div>
                 {%- endif -%}
                {%- endunless -%}

                <noscript class="product__variants-select product-form__noscript-wrapper-{{ section.id }}">
                  <div class="product-form__input product-form__input--dropdown{% if product.has_only_default_variant %} hidden{% endif %} product__section--element">
                    <label class="form__label" for="Variants-{{ section.id }}">{{ 'products.product.select_option' | t }}</label>
                    <div class="select">
                      <select name="id" id="Variants-{{ section.id }}" class="styled-select">
                        {%- for variant in product.variants -%}
                          <option
                            {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %}
                            {% if variant.available == false %}disabled{% endif %}
                            value="{{ variant.id }}"
                          >
                            {{ variant.title }}
                            {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                            - {{ variant.price | money | strip_html }}
                          </option>
                        {%- endfor -%}
                      </select>
                    </div>
                  </div>
                </noscript>

                <input class="formVariantId" name="" type="hidden" value="{{ product.selected_or_first_available_variant.id }}">
              {% endform %}

            {%- when 'product_availability' -%}
              <div class="product-single__store-availability-container product__section--element"
                data-variant-id="{{ current_variant.id }}"
                data-product-title="{{ product.title | escape }}"
                style="visibility:hidden; min-height: 120px;" data-store-availability-container>
              </div>

            {%- when 'product_quantity' -%}
              <div class="product__section--qty qty-selection product__section--element" data-product-qty {{ block.shopify_attributes }}>
                <label for="qty-{{ product.id }}" class="h5">{{ 'products.product.quantity' | t }}</label>
                <div class="product__quantity--wrapper">
                  <button class="down quantity-control-down" type="button">
                    <span class="visuallyhidden">{{ 'products.product.decrease' | t: product: product.title | escape }}</span>
                -</button>
                    <input id="qty-{{ product.id }}" min="1" type="text" name="quantity" class="formQty quantity" value="1" />
                  <button class="up quantity-control-up" type="button">
                    <span class="visuallyhidden">{{ 'products.product.increase' | t: product: product.title | escape }}</span>
                +</button>
                </div>
              </div>

            {%- when 'product_sku' -%}
              <div class="product__section--sku sku product__section--element" {{ block.shopify_attributes }}>
                <label for="variantSku">{{ 'products.product.sku' | t }}:</label>
                <span id="variantSku" class="variant_sku">{{ current_variant.sku }}</span>
              </div>

            {%- when 'text_content' -%}
              {% if block.settings.text != blank %}
                <div class="product__section--text product__section--element rte" {{ block.shopify_attributes }}>
                  {{ block.settings.text }}
                </div>
              {% endif %}

            {%- when 'text_popup' -%}
              {% if block.settings.text != blank and block.settings.popup_trigger != blank %}
                <div class="product__section--popup product__section--element{% if block.settings.show_inline %} inline{% endif %}" {{ block.shopify_attributes }}>
                  <button class="product__contact-trigger button-as-link js-modal-open js-contact-trigger" type="button" name="button" data-wau-modal-target="popup-content" >{{ block.settings.popup_trigger }}</button>
                  <div data-wau-modal-content="popup-content" style="display: none">
                    {{ block.settings.text }}
                  </div>
                </div>
              {% endif %}

            {% when 'payment_icons' %}
                <div class="product__section--payment-icons product__section--element"
                    style="background-color:{{ block.settings.background_color }};" {{ block.shopify_attributes }}>
                  {% if block.settings.title != blank %}
                    <h5>{{ block.settings.title | escape }}</h5>
                  {% endif %}
                {% for type in shop.enabled_payment_types %}
                  {{ type | payment_type_svg_tag: class:'payment-icon' }}
                {% endfor %}
                </div>

            {% when 'stock_levels' %}
              <div class="product__section-stockLevels" {{ block.shopify_attributes }}>
                {% if block.settings.threshold > 0 %}
                  {%- liquid
                    assign show_hidden_class = false
                    if current_variant.inventory_management and current_variant.inventory_quantity < block.settings.threshold and current_variant.inventory_quantity > 0
                      assign show_hidden_class = true
                    endif
                  -%}
                  {% capture variant_stock_levels_classes %}
                    variant-stock-levels js-variant-stock-levels variant-stock-levels--{{ section.id }} {% unless show_hidden_class %}visually-hidden{% endunless %}
                  {% endcapture %}

                  <div
                    id="variant-stock-levels--{{ section.id }}"
                    class="{{ variant_stock_levels_classes | strip }}"
                    data-stock-level-threshold="{{ block.settings.threshold }}"
                  >
                    <div class="variant-stock-levels__inner product__section--element">
                      <span class="pulse__icon"></span>
                      <span class="js-variant-stock-levels__message">
                        {{ 'products.product.only_left' | t: count: current_variant.inventory_quantity }}
                      </span>
                    </div><!-- /.variant-stock-levels__inner -->
                  </div><!-- /#variant-stock-levels -->
                {% endif %}
                {% style %}
                  .pulse__icon {
                    background: rgba({{ block.settings.pulse_background | color_to_rgb | remove: 'rgb(' | remove: ')' }});
                    box-shadow: 0 0 0 0 rgba({{ block.settings.pulse_background | color_to_rgb | remove: 'rgb(' | remove: ')' }});
                    transform: scale(1);
                    animation: pulse-color 2s infinite;
                  }
                  @keyframes pulse-color {
                    0% {
                      transform: scale(0.95);
                      box-shadow: 0 0 0 0 rgba({{ block.settings.pulse_background | color_to_rgb | remove: 'rgb(' | remove: ')' }}, 0.7);
                    }
                    70% {
                      transform: scale(1);
                      box-shadow: 0 0 0 10px rgba({{ block.settings.pulse_background | color_to_rgb | remove: 'rgb(' | remove: ')' }}, 0);
                    }
                    100% {
                      transform: scale(0.95);
                      box-shadow: 0 0 0 0 rgba({{ block.settings.pulse_background | color_to_rgb | remove: 'rgb(' | remove: ')' }}, 0);
                    }
                  }
                {% endstyle %}
              </div>

            {%- when 'product_buttons' -%}
              <div class="product__section--buttons product-add product__section--element" {{ block.shopify_attributes }}>
                {% form 'product', product,
                   id: product_buttons_form_id,
                   class: "product__form-buttons js-prod-form-submit relative",
                   data-product-id: product.id %}

                  {%- liquid

                    assign call_to_action = 'products.product.add_to_cart' | t
                    unless current_variant.available
                      assign call_to_action = 'products.product.sold_out' | t
                    endunless

                    assign product_form_id = 'product-form-' | append: section.id

                  -%}

                  {% if block.settings.show_gift_card_recipient and product.gift_card? %}
                    {%- render 'gift-card-recipient-form', product: product, form: form, section: section -%}
                  {%- endif -%}

                  <input class="formVariantId" name="id" type="hidden" value="{{ product.selected_or_first_available_variant.id }}">
                  <input class="formQty" type="hidden" name="quantity" value="1" />
                  <div class="note note-success js-added-msg" style="display: none">
                    <strong>{{ 'products.product.added' | t }}</strong>&nbsp;&nbsp;&nbsp;<a class="underline" href="{{ routes.cart_url }}">{{ 'products.product.view_cart' | t }}</a> {{ 'products.product.or' | t }} <a class="underline" href="{{ routes.all_products_collection_url }}">{{ 'products.product.continue' | t }}</a>.
                  </div>
                  <div class="note note-error js-error-msg" style="display: none">
                    <strong>{{ 'cart.general.cart_error' | t }}</strong>&nbsp;&nbsp;&nbsp;{{ 'cart.general.update_qty_error' | t }}
                  </div>

                  <input id="addToCart" type="submit" name="button" class="add clearfix AddtoCart js-ajax-submit {% if settings.show_payment_button and product.selling_plan_groups.size == 0 %} secondary-button{% endif %}" value="{{ call_to_action }}" {% unless current_variant.available %}disabled{% endunless %} />

                  {% if settings.show_payment_button %}
                   {{ form | payment_button }}
                  {% endif %}
                {%-  endform -%}
              </div>

            {%- when 'product_description' -%}
              {% unless tabs_active %}
                <div class="product__section--desc product__decription-container rte product__section--element" {{ block.shopify_attributes }}>
                    <div class="product__description--base">
                      {{ product.description }}
                    </div>
                  </div>
                  {% elsif product_tabs_shown == false %}
                <div class="product__section--desc product__decription-container rte product__section--element" {{ block.shopify_attributes }}>
                    {{ product_tabs }}
                    {% assign product_tabs_shown = true %}
                </div>
              {% endunless %}

            {% when 'tab_content' %}
              {% if product_tabs_shown == false %}
                <div class="product__section--{{ block.type }} product__decription-container rte product__section--element" {{ block.shopify_attributes }}>
                    {{ product_tabs }}
                    {% assign product_tabs_shown = true %}
                </div>
              {% endif %}

            {% when 'tab_question' %}
              {% if product_tabs_shown == false %}
                <div class="product__section--{{ block.type }} product__decription-container rte product__section--element" {{ block.shopify_attributes }}>
                    {{ product_tabs }}
                    {% assign product_tabs_shown = true %}
                </div>
              {% endif %}

            {% when 'complementary_products' %}
              {%
                render 'complementary-product',
                block: block,
                section: section,
                product: product
              %}

            {%- when 'image' -%}
              {% if block.settings.image != blank %}
              {% liquid
                assign loading = 'lazy'
                assign fetch_priority = 'auto'
                if section.index < 3 and forloop.index < 3
                  assign loading = 'eager'
                  assign fetch_priority = 'high'
                endif
                %}
              <div class="product__section--image product__section--element" {{ block.shopify_attributes }}>
                {% if block.settings.link != blank %}<a href="{{ block.settings.link }}">{% endif %}
                    {%
                      render 'basic-responsive-image',
                      type: block.settings.image,
                      width: 2400,
                      loading: loading,
                      fetchpriority: fetch_priority
                    %}
                {% if block.settings.link != blank %}</a>{% endif %}
              </div>
              {% endif %}

            {%- when 'product_customization' -%}

            <div class="product__line-item product__section--element {{ block.shopify_attributes }}">
              {%
                render 'product-customizations',
                block: block,
                product_buttons_form_id: product_buttons_form_id
              %}
            </div>

            {%- when 'text_with_icon' -%}
              {% liquid
                assign icon = block.settings.icon
                assign type = 'fash-theme'
                case icon
                when 'bag', 'cart', 'chat', 'checkmark', 'gift', 'grid', 'home', 'menu-dots', 'money', 'promo', 'sale-tag', 'search', 'secure', 'share', 'ship-truck', 'star', 'user', 'wish', 'wish-focus'
                  assign type = 'apollo'
                endcase
              %}
              {% unless block.settings.text ==  blank %}
                <div class="product__section--text-with-icon product__section--element" {{ block.shopify_attributes }}>
                  <div class="product--text-with-icon__icon">
                    {% render 'snip-icons',
                      wrapper: '.product__block-icon',
                      type: type,
                      icon: block.settings.icon,
                      size: '20px' %}
                    </div>
                    <div class="product--text-with-icon__text">
                      {{ block.settings.text }}
                    </div>
                </div>
              {% endunless %}

            {%- when 'share' -%}
              <div class="product__section--share product__share-container product__section--element" {{ block.shopify_attributes }}>
                {% render 'social' with product %}
              </div>

            {% when '@app' %}
              <div class="product__section--app product__section--element">
                {% render block %}
              </div>

              {% when 'custom_liquid' %}
                <div class="product__section--custom_liquid product__section--element {{ block.shopify_attributes }}">
                  {{ block.settings.custom_liquid }}
                </div>
            {% endcase %}
          {%- endfor -%}

        </div>
      </div>
      <div class="clear"></div>
    </div>
  {% endif %}
  <style>
    .global__section.featured-product {
      padding: 20px 0;
    }

    {% if settings.product_variants == 'swatches' %}
      #section-{{ section.id }} .selector-wrapper {
        display: none;
      }
      #section-{{ section.id }} .single-option-selector {
        opacity: 0;
        display: none;
      }
    {% endif %}

    {% if section.settings.thumbnail_position == 'bottom' %}
      #section-{{ section.id }} #product-{{ product.id }} .thumb-slider-slides {
        transition: left 0.5s ease-in-out;
      }
    {% else %}
      #section-{{ section.id }} #product-{{ product.id }} .thumb-slider-slides {
        transition: top 0.5s ease-in-out;
      }
    {% endif %}
    #section-{{ section.id }}.featured-product {
        background: {{ section.settings.product_background }};
    }
  </style>

  </div>
</section>


{% unless product == empty %}
  <script type="application/json" id="ModelJson-{{ section.id }}">
  {{ product.media | where: 'media_type', 'model' | json }}
  </script>
{% endunless %}

{% schema %}
{
  "name": "Featured product",
  "settings": [
    {
      "type":"color",
      "id":"product_background",
      "label":"Background color"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Featured Product"
    },
    {
      "type": "product",
      "id": "featured_product",
      "label": "Product"
    },
    {
      "type": "header",
      "content": "Media"
    },
    {
      "type": "select",
      "id": "thumbnail_position",
      "label": "Thumbnail position",
      "options": [{
          "value": "right",
          "label": "Right"
        },
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "click_to_enlarge",
      "label": "Enable click to enlarge",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "label": "Enable video looping",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "adaptive_height",
      "label": "Adaptive height",
      "default": true,
      "info":"Slideshow will adjust height to match the current slide"
    },
    {
      "type": "paragraph",
      "content": "Learn more about [Media types](https://help.shopify.com/en/manual/products/product-media)"
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "complementary_products",
      "name": "Complementary products",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "To select complementary products, add the Search & Discovery app. [Learn more](https:\/\/shopify.dev\/themes\/product-merchandising\/recommendations)"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Pair it with"
        },
        {
          "type": "range",
          "id": "limit",
          "min": 1,
          "max": 10,
          "step": 1,
          "label": "Complementary products to show",
          "info": "Displays in carousel when more than three products.",
          "default": 2
        }
      ]
    },
    {
      "type": "product_title",
      "name":"Product title",
      "settings": []
    },
    {
      "type": "product_vendor",
      "name":"Product vendor",
      "settings": []
    },
    {
      "type": "product_price",
      "name":"Product price",
      "settings": [
        {
          "type": "checkbox",
          "id": "show_tax_information",
          "label": "Show tax information",
          "default": false,
          "info":"If tax is included within the product price"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name":"Custom liquid",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "Custom liquid",
          "info":"Add app snippets or other Liquid code to create advanced customizations [Learn more](https:\/\/shopify.dev\/docs\/api\/liquid)"
        }
      ]
    },
    {
      "type": "image",
      "name": "Image",
      "settings": [
      {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link",
          "info": "Optional"
        }
      ]
    },
    {
      "type": "payment_icons",
      "name": "Payment icons",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Secure online shopping"
        },
        {
          "type": "color",
          "id": "background_color",
          "label": "Background",
          "default": "#f5f5f5"
        }
      ]
    },
    {
      "type": "product_availability",
      "name": "Pickup availability",
      "limit": 1,
      "settings": []
    },
    {
      "type": "product_buttons",
      "name": "Buttons",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_gift_card_recipient",
          "default": false,
          "label": "Show recipient information form for gift card products",
          "info": "Gift card products can optionally be sent direct to a recipient along with a personal message. [Learn more](https:\/\/help.shopify.com\/manual\/online-store\/themes\/customizing-themes\/add-gift-card-recipient-fields)"
        }
      ]
    },
    {
      "type": "product_customization",
      "name": "Product customization",
      "limit": 3,
      "settings": [
        {
          "type": "paragraph",
          "content": "Product customizations properties allow you to capture additional information when your customers place an order."
        },
        {
          "type": "select",
          "id": "property_type",
          "label": "Choose a property",
          "options": [
            {
              "value": "text",
              "label": "Single line text"
            },
            {
              "value": "multi_line_text",
              "label": "Multiple line text"
            },
            {
              "value": "image",
              "label": "Image"
            }
          ]
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Label"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": false
        }
      ]
    },
    {
      "type": "product_description",
      "name": "Product description",
      "limit": 1,
      "settings": []
    },
    {
      "type": "product_quantity",
      "name": "Quantity",
      "limit": 1,
      "settings": []
    },
    {
      "type": "product_sku",
      "name": "Sku",
      "limit": 1,
      "settings": []
    },
    {
      "type": "product_variants",
      "name": "Variants",
      "limit": 1,
      "settings": []
    },
    {
      "type": "share",
      "name": "Social sharing",
      "limit": 1,
      "settings": []
    },
    {
      "type": "stock_levels",
      "name": "Stock levels",
      "limit": 1,
      "settings": [
        {
          "type": "range",
          "id": "threshold",
          "min": 0,
          "max": 50,
          "step": 1,
          "label": "Threshold",
          "info": "Increase buyer urgency if inventory below selected number, set to 0 to disable.",
          "default": 4
        },
        {
          "type":"color",
          "id":"pulse_background",
          "label":"Pulse background",
          "default": "#ff6600"
        }
      ]
    },
    {
      "type": "tab_content",
      "name": "Tab content",
      "settings": [
        {
          "label": "Title",
          "id": "tab_title",
          "type": "text",
          "default": "Tab title"
        },
        {
          "label": "Text",
          "id": "tab_text",
          "type": "richtext",
          "default": "<p>Add text which will be shown in tabs across all product pages</p>"
        }
      ]
    },
    {
      "type": "tab_question",
      "name": "Tab contact form",
      "limit": 1,
      "settings": [
        {
          "label": "Title",
          "id": "tab_title",
          "type": "text",
          "default": "Ask a question"
        },
        {
          "label": "Text",
          "id": "tab_text",
          "type": "richtext",
          "default": "<p>Add text which will be shown in tabs across all product pages</p>"
        }
      ]
    },
    {
      "name":"Text",
      "type": "text_content",
      "settings":
      [
        {
          "label": "Text",
          "id": "text",
          "type": "richtext",
          "default": "<p>Add additional text content</p>"
        }
      ]
    },
    {
      "name":"Text popup",
      "type": "text_popup",
      "settings":
      [
        {
          "label": "Popup modal label",
          "id": "popup_trigger",
          "type": "text",
          "default": "Popup label"
        },
        {
          "label": "Text",
          "id": "text",
          "type": "richtext",
          "default": "<p>Add additional text content</p>"
        },
        {
          "label": "Show popup label inline",
          "id": "show_inline",
          "type": "checkbox",
          "default": false,
          "info": "Show inline with other popup links where selected"
        }
      ]
    },
    {
      "type": "text_with_icon",
      "name": "Text with icon",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Add text alongside an icon</p>"
        },
        {
          "type": "select",
          "id": "icon",
          "label": "Choose an icon",
          "options": [
          {
            "value": "appliance",
            "label": "Appliance"
          },
          {
            "value": "bag",
            "label": "Bag"
          },
          {
            "value": "battery",
            "label": "Battery"
          },
          {
            "value": "bed",
            "label": "Bed"
          },
          {
            "value": "bell",
            "label": "Bell"
          },
          {
            "value": "calendar",
            "label": "Calendar"
          },
          {
            "value": "camera",
            "label": "Camera"
          },
          {
            "value": "chair",
            "label": "Chair"
          },
          {
            "value": "chat",
            "label": "Chat"
          },
          {
            "value": "checkmark",
            "label": "Checkmark"
          },
          {
            "value": "child",
            "label": "Child"
          },
          {
            "value": "clock",
            "label": "Clock"
          },
          {
            "value": "disability",
            "label": "Disability"
          },
          {
            "value": "dishwasher",
            "label": "Dishwasher"
          },
          {
            "value": "display",
            "label": "Display"
          },
          {
            "value": "drill",
            "label": "Drill"
          },
          {
            "value": "drink",
            "label": "Drink"
          },
          {
            "value": "eco",
            "label": "Eco"
          },
          {
            "value": "filter",
            "label": "Filter"
          },
          {
            "value": "flower",
            "label": "Flower"
          },
          {
            "value": "food",
            "label": "Food"
          },
          {
            "value": "gift",
            "label": "Gift"
          },
          {
            "value": "globe",
            "label": "Globe"
          },
          {
            "value": "grid",
            "label": "Grid"
          },
          {
            "value": "hammer",
            "label": "Hammer"
          },
          {
            "value": "hanger",
            "label": "Hanger"
          },
          {
            "value": "headphones",
            "label": "Headphones"
          },
          {
            "value": "wish",
            "label": "Heart"
          },
          {
            "value": "wish-focus",
            "label": "Heart filled"
          },
          {
            "value": "help",
            "label": "Help"
          },
          {
            "value": "home",
            "label": "Home"
          },
          {
            "value": "laptop",
            "label": "Laptop"
          },
          {
            "value": "laundry",
            "label": "Laundry"
          },
          {
            "value": "lights",
            "label": "Lights"
          },
          {
            "value": "location",
            "label": "Location"
          },
          {
            "value": "lock",
            "label": "Lock"
          },
          {
            "value": "menu-dots",
            "label": "Menu dots"
          },
          {
            "value": "microphone",
            "label": "Microphone"
          },
          {
            "value": "money",
            "label": "Money"
          },
          {
            "value": "oven",
            "label": "Oven"
          },
          {
            "value": "phone",
            "label": "Phone"
          },
          {
            "value": "pine",
            "label": "Pine"
          },
          {
            "value": "planet",
            "label": "Planet"
          },
          {
            "value": "promo",
            "label": "Promo"
          },
          {
            "value": "receiver",
            "label": "Receiver"
          },
          {
            "value": "returns",
            "label": "Returns"
          },
          {
            "value": "sale-tag",
            "label": "Sale tag"
          },
          {
            "value": "search",
            "label": "Search"
          },
          {
            "value": "secure",
            "label": "Secure"
          },
          {
            "value": "security",
            "label": "Security"
          },
          {
            "value": "share",
            "label": "Share"
          },
          {
            "value": "ship-truck",
            "label": "Shipping truck"
          },
          {
            "value": "speaker",
            "label": "Speaker"
          },
          {
            "value": "star",
            "label": "Star"
          },
          {
            "value": "support",
            "label": "Support"
          },
          {
            "value": "trophy",
            "label": "Trophy"
          },
          {
            "value": "tv",
            "label": "TV"
          },
          {
            "value": "user",
            "label": "User"
          },
          {
            "value": "verified",
            "label": "Verified"
          },
          {
            "value": "video",
            "label": "Video"
          },
          {
            "value": "watch",
            "label": "Watch"
          }
        ]
      }
      ]
    }
  ],
  "presets": [{
    "name": "Featured product",
    "blocks": [
      {
        "type": "product_vendor"
      },
      {
        "type": "product_title"
      },
      {
        "type": "product_price"
      },
  		{
        "type": "product_variants"
  		},
  		{
      	"type": "product_quantity"
      },
      {
      	"type": "product_buttons"
      },
      {
      	"type": "product_description"
      }
    ]
  }],
  "disabled_on": {
    "groups": ["header", "footer"]
  }
}
{% endschema %}
