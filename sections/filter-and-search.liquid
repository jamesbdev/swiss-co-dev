{%- liquid

  assign section_padding = ''
  if section.settings.section_padding == 'top'
    assign section_padding = 'pb0'
  elsif section.settings.section_padding == 'bottom'
    assign section_padding = 'mt0 pt0'
  elsif section.settings.section_padding == 'none'
    assign section_padding = 'pb0 pt0'
  endif

  assign has_image = false
  assign class = 'no_image'
  assign image_position = section.settings.image_position

  if section.settings.image
    assign has_image = true
    assign class = 'has_image'
  endif

-%}

{% style %}
#shopify-section-{{ section.id }} {
  --background:  {{ section.settings.background }};
  --text-color:  {{ section.settings.text_color }};
}

wau-filter-search.has_image {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
}

wau-filter-search.has_image form#filter-search-form {
    flex: 0 0 35%;
    padding: 40px;
}

wau-filter-search.has_image .filter--section_image {
    flex: 0 0 65%;
    height: 100%;
}

wau-filter-search  form#filter-search-form {
    background: var(--background);
}

wau-filter-search form#filter-search-form h2,
wau-filter-search form#filter-search-form select,
wau-filter-search form#filter-search-form select > option {
    color: var(--text-color);
}

wau-filter-search form#filter-search-form select {
    border: 1px solid var(--text-color);
}

wau-filter-search .filter--section_image .box-ratio {
    padding-bottom: 0 !important;
    height: 100%;
    position: relative;
}

wau-filter-search .filter--section_image .box-ratio img {
    object-fit: cover;
    height: 100%;
    position: absolute;
    top: 50%;
    right: 50%;
    bottom: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@media screen and (max-width: 800px) {
  wau-filter-search.has_image form#filter-search-form {
      flex: 0 0 100%;
      order: 1;
  }

  wau-filter-search.has_image .filter--section_image {
      flex: 0 0 100%;
      height: 300px;
      order: 0;
  }
}

wau-filter-search.no_image  form#filter-search-form {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding: 20px 0;
}

wau-filter-search.no_image  h2.section-heading {
    flex: 0 0 100%;
}

wau-filter-search .filter--search__item {
    flex: 0 0 20%;
    padding: 0 5px;
}

@media screen and (max-width: 740px) {
  wau-filter-search .filter--search__item {
    flex: 0 0 80%;
  }
}
{% endstyle %}

<section class="global__section padded--section section-{{ section.id }} filter-search-section {{ section_padding }}" data-section-id="{{ section.id }}" data-aos="fade" data-section-type="filter-search">

  {% if section.settings.full_width %}
    <div class="gridlock-fluid">
    <div class="row">
  {% endif %}

      {% if has_image %}
        {% capture image'%}
          {% liquid
            assign sm_render = '100vw'
            assign md_render = '100vw'
            assign lg_render = '100vw'
            assign loading = 'lazy'
            assign fetch_priority = 'auto'
            if section.index == 1
              assign fetch_priority = 'high'
              assign loading = 'eager'
            endif
          %}
          <div class="filter--section_image">
            {%
              render 'basic-responsive-image',
              type: section.settings.image,
              sm_render: sm_render,
              md_render: md_render,
              lg_render: lg_render,
              width: 2800,
              loading: loading,
              fetchpriority: fetch_priority
            %}
          </div>
        {% endcapture %}
      {% endif %}

      <div class="row grid__wrapper gr0">

        <wau-filter-search class="span-12 auto {{ class }}" data-show-filter-count="{{ section.settings.show_filter_count }}">

          {% if has_image and image_position == 'left' %}
            {{ image }}
          {% endif %}

          <form id="filter-search-form">
            {% if section.settings.heading != blank %}
              <h2 class="section-heading">
                {{ section.settings.heading | escape }}
              </h2>
            {% endif %}
            <div class="filter--search__item">
              <select name="collection" id="collection">
                <option class="first" value="" >{{ 'sections.search_and_filter.select' | t }}</option>
                {% liquid

                  assign has_first_filter = false
                  assign has_second_filter = false

                 %}
                {% if section.blocks.size > 0 %}
                  {% for block in section.blocks %}
                    {% liquid

                      if block.settings.filter1 != blank
                        assign has_first_filter = true
                      endif

                      if block.settings.filter2 != blank
                        assign has_second_filter = true
                      endif

                      if block.settings.collection != empty
                        assign collection = block.settings.collection
                      else
                        assign collection = collections | first
                      endif
                      assign filter1 = block.settings.filter1
                      assign filter2 = block.settings.filter2
                      if block.settings.title != ''
                        assign option_title =  block.settings.title
                      else
                        assign option_title = collection.title
                      endif

                    %}
                      <option data-index="{{ forloop.index }}" value="{{ collection.url }}" data-tag-1="{{ filter1 }}" data-tag-2="{{ filter2 }}">
                        {{ option_title }}
                    </option>
                  {% endfor %}
                {% endif %}
              </select>
            </div><!-- / filter item -->
            {% if has_first_filter %}
            <div class="filter--search__item">
              <select name="filter1" id="filter1" disabled>
                <option class="first" data-index="{{ forloop.index }}" value="">{{ 'sections.search_and_filter.select' | t }}</option>
              </select>
            </div><!-- / filter item -->
            {% endif %}
            {% if has_second_filter %}
            <div class="filter--search__item">
              <select name="filter2" id="filter2" disabled>
                <option class="first" data-index="{{ forloop.index }}" value="">{{ 'sections.search_and_filter.select' | t }}</option>
              </select>
            </div><!-- / filter item -->
            {% endif %}
            <div class="filter--search__item">
              <input type="button" class="button mb0 js-submit" style="width: 100%;" value="{{ 'general.password_page.submit' | t }}">
            </div><!-- / filter item -->
          </form>

          {% if has_image and image_position == 'right' %}
            {{ image }}
          {% endif %}

        </wau-filter-search>

      </div><!-- /.row -->

  {% if section.settings.full_width %}
    </div><!-- /.row -->
    </div><!-- /.gridlock-fluid -->
  {% endif %}

</section>
{% schema %}
{
  "name": "Filter and search",
  "limit": 1,
  "settings": [
    {
      "type":"paragraph",
      "content":"Add collections as blocks and define which filters customers can use for fast access to products that match. Learn how to add storefront filters [here](https:\/\/help.shopify.com\/en\/manual\/online-store\/themes\/os20\/customize\/filters)"
    },
    {
      "type":"checkbox",
      "id":"full_width",
      "label":"Full width",
      "default": false
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Search our store"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Add an image",
      "info": "2880px x 1620px recommended"
    },
    {
      "type": "checkbox",
      "id": "show_filter_count",
      "label": "Show results count",
      "default": true
    },
    {
      "type": "radio",
      "id": "image_position",
      "label": "Image position",
      "default":"left",
      "info":"Image will show first on mobile",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ]
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#000"
    },
    {
      "type": "color_background",
      "id": "background",
      "label": "Background",
      "default": "#e5e5e5"
    },
    {
      "type": "select",
      "id": "section_padding",
      "label": "Section spacing",
      "options": [
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        },
        {
          "value": "both",
          "label": "Both"
        },
        {
          "value": "none",
          "label": "None"
        }
      ],
      "default": "both"
    }
  ],
  "blocks": [
     {
       "name": "Collection",
       "type": "collection",
       "settings": [
          {
            "type": "collection",
            "id": "collection",
            "label": "Collection"
          },
          {
            "type":"paragraph",
            "content":"Enter the case sensitive title of existing filters that have been created within your store"
          },
          {
            "type": "text",
            "id": "title",
            "label": "Title"
          },
         {
           "type": "text",
           "id": "filter1",
           "label": "Filter 1",
           "default": "Product type"
         },
         {
           "type": "text",
           "id": "filter2",
           "label": "Filter 2",
           "default": "Size"
         }
       ]
     }
  ],
  "presets": [{
    "name": "Filter and search"
  }],
  "disabled_on": {
    "groups": ["header"]
  }
}
{% endschema %}
